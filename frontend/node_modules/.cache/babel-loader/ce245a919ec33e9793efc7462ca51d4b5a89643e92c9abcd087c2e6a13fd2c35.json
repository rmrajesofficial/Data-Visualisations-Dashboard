{"ast":null,"code":"var _jsxFileName = \"/Users/rajesmanna/Documents/Project/project_18198/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Flex, Button, Text, useToast } from '@chakra-ui/react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [jsonData, setJsonData] = useState(null);\n  const toast = useToast();\n  const handleFileSelect = event => {\n    const files = event.target.files;\n    setSelectedFiles([...files]);\n  };\n  const handleFileSubmit = async () => {\n    if (selectedFiles.length > 0) {\n      const file = selectedFiles[0];\n      if (file.type === 'application/json') {\n        const reader = new FileReader();\n        reader.onload = async event => {\n          const data = JSON.parse(event.target.result);\n          setJsonData(data);\n          try {\n            const response = await axios.post('/api/postdata/', data);\n            toast({\n              title: 'Data Successfully Sent',\n              description: response.data.message,\n              status: 'success',\n              duration: 5000,\n              isClosable: true\n            });\n          } catch (error) {\n            console.error('Error sending data:', error.response.data);\n            toast({\n              title: 'Error Sending Data',\n              description: 'An error occurred while sending data.',\n              status: 'error',\n              duration: 5000,\n              isClosable: true\n            });\n          }\n        };\n        reader.readAsText(file);\n      } else {\n        console.log('Selected file is not a JSON file');\n        toast({\n          title: 'Invalid File Type',\n          description: 'Please select a valid JSON file.',\n          status: 'error',\n          duration: 5000,\n          isClosable: true\n        });\n      }\n    } else {\n      console.log('No file selected');\n      toast({\n        title: 'No File Selected',\n        description: 'Please select a file before submitting.',\n        status: 'warning',\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    direction: \"column\",\n    align: \"center\",\n    justify: \"center\",\n    height: \"100vh\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"2xl\",\n      mb: 4,\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".json\",\n      onChange: handleFileSelect,\n      style: {\n        cursor: 'pointer',\n        marginBottom: '1em'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      direction: \"column\",\n      mt: 4,\n      children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(Text, {\n        children: file.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"teal\",\n      mt: 4,\n      onClick: handleFileSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"SvY32ynfEGJs12QBrvuEYD2wQvA=\", false, function () {\n  return [useToast];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Flex","Button","Text","useToast","axios","jsxDEV","_jsxDEV","Dashboard","_s","selectedFiles","setSelectedFiles","jsonData","setJsonData","toast","handleFileSelect","event","files","target","handleFileSubmit","length","file","type","reader","FileReader","onload","data","JSON","parse","result","response","post","title","description","message","status","duration","isClosable","error","console","readAsText","log","direction","align","justify","height","children","fontSize","mb","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","style","cursor","marginBottom","mt","map","index","name","colorScheme","onClick","_c","$RefreshReg$"],"sources":["/Users/rajesmanna/Documents/Project/project_18198/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Flex, Button, Text, useToast } from '@chakra-ui/react';\nimport axios from 'axios';\n\nconst Dashboard = () => {\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [jsonData, setJsonData] = useState(null);\n    const toast = useToast();\n\n    const handleFileSelect = (event) => {\n        const files = event.target.files;\n        setSelectedFiles([...files]);\n    };\n\n    const handleFileSubmit = async () => {\n        if (selectedFiles.length > 0) {\n            const file = selectedFiles[0];\n            if (file.type === 'application/json') {\n                const reader = new FileReader();\n                reader.onload = async (event) => {\n                    const data = JSON.parse(event.target.result);\n                    setJsonData(data);\n                    try {\n                        const response = await axios.post('/api/postdata/', data);\n                        toast({\n                            title: 'Data Successfully Sent',\n                            description: response.data.message,\n                            status: 'success',\n                            duration: 5000,\n                            isClosable: true,\n                        });\n                    } catch (error) {\n                        console.error('Error sending data:', error.response.data);\n                        toast({\n                            title: 'Error Sending Data',\n                            description: 'An error occurred while sending data.',\n                            status: 'error',\n                            duration: 5000,\n                            isClosable: true,\n                        });\n                    }\n                };\n                reader.readAsText(file);\n            } else {\n                console.log('Selected file is not a JSON file');\n                toast({\n                    title: 'Invalid File Type',\n                    description: 'Please select a valid JSON file.',\n                    status: 'error',\n                    duration: 5000,\n                    isClosable: true,\n                });\n            }\n        } else {\n            console.log('No file selected');\n            toast({\n                title: 'No File Selected',\n                description: 'Please select a file before submitting.',\n                status: 'warning',\n                duration: 5000,\n                isClosable: true,\n            });\n        }\n    };\n\n    return (\n        <Flex direction=\"column\" align=\"center\" justify=\"center\" height=\"100vh\">\n            <Text fontSize=\"2xl\" mb={4}>\n                Dashboard\n            </Text>\n            <input\n                type=\"file\"\n                accept=\".json\"\n                onChange={handleFileSelect}\n                style={{ cursor: 'pointer', marginBottom: '1em' }}\n            />\n            <Flex direction=\"column\" mt={4}>\n                {selectedFiles.map((file, index) => (\n                    <Text key={index}>{file.name}</Text>\n                ))}\n            </Flex>\n            <Button colorScheme=\"teal\" mt={4} onClick={handleFileSubmit}>\n                Submit\n            </Button>\n        </Flex>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}