{"ast":null,"code":"var _jsxFileName = \"/Users/rajesmanna/Documents/Project/project_18198/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Flex, Button, Text, useToast } from '@chakra-ui/react';\nimport Chart from 'chart.js/auto';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [dataList, setDataList] = useState([null]);\n  const [jsonData, setJsonData] = useState(null);\n  const toast = useToast();\n  const createCharts = (chartId, label, attribute) => {\n    const ctx = document.getElementById(chartId).getContext('2d');\n    const values = dataList.map(item => item[attribute]);\n    const labels = dataList.map((item, index) => `Data ${index + 1}`);\n    new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: label,\n          data: values,\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  };\n  const handleFileSelect = event => {\n    const files = event.target.files;\n    setSelectedFiles([...files]);\n  };\n  useEffect(() => {\n    // Function to make the Axios request\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/getdata/');\n        const fetchedDataList = response.data;\n        setDataList(fetchedDataList);\n        console.log(fetchedDataList);\n        createCharts();\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleFileSubmit = async () => {\n    if (selectedFiles.length > 0) {\n      const file = selectedFiles[0];\n      if (file.type === 'application/json') {\n        const reader = new FileReader();\n        reader.onload = async event => {\n          const data = JSON.parse(event.target.result);\n          setJsonData(data);\n          try {\n            const response = await axios.post('http://localhost:8000/api/postdata/', {\n              \"jsondata\": data\n            });\n            toast({\n              title: 'Data Successfully Sent',\n              description: response.data.message,\n              status: 'success',\n              duration: 5000,\n              isClosable: true\n            });\n          } catch (error) {\n            console.error('Error sending data:', error.response);\n            toast({\n              title: 'Error Sending Data',\n              description: 'An error occurred while sending data.',\n              status: 'error',\n              duration: 5000,\n              isClosable: true\n            });\n          }\n        };\n        reader.readAsText(file);\n      } else {\n        console.log('Selected file is not a JSON file');\n        toast({\n          title: 'Invalid File Type',\n          description: 'Please select a valid JSON file.',\n          status: 'error',\n          duration: 5000,\n          isClosable: true\n        });\n      }\n    } else {\n      console.log('No file selected');\n      toast({\n        title: 'No File Selected',\n        description: 'Please select a file before submitting.',\n        status: 'warning',\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    direction: \"column\",\n    align: \"center\",\n    justify: \"center\",\n    height: \"100vh\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"2xl\",\n      mb: 4,\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".json\",\n      onChange: handleFileSelect,\n      style: {\n        cursor: 'pointer',\n        marginBottom: '1em'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      direction: \"column\",\n      mt: 4,\n      children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(Text, {\n        children: file.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"teal\",\n      mt: 4,\n      onClick: handleFileSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), dataList ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"intensityChart\",\n        width: \"400\",\n        height: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"relevanceChart\",\n        width: \"400\",\n        height: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"likelihoodChart\",\n        width: \"400\",\n        height: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Text, {\n      children: \"Data Not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"qVv7e8bWdczz5i9hdKKiI8iIwxg=\", false, function () {\n  return [useToast];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Flex","Button","Text","useToast","Chart","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","selectedFiles","setSelectedFiles","dataList","setDataList","jsonData","setJsonData","toast","createCharts","chartId","label","attribute","ctx","document","getElementById","getContext","values","map","item","labels","index","type","data","datasets","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","handleFileSelect","event","files","target","fetchData","response","get","fetchedDataList","console","log","error","handleFileSubmit","length","file","reader","FileReader","onload","JSON","parse","result","post","title","description","message","status","duration","isClosable","readAsText","direction","align","justify","height","children","fontSize","mb","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","style","cursor","marginBottom","mt","name","colorScheme","onClick","id","width","_c","$RefreshReg$"],"sources":["/Users/rajesmanna/Documents/Project/project_18198/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Flex, Button, Text, useToast } from '@chakra-ui/react';\nimport Chart from 'chart.js/auto';\n\nimport axios from 'axios';\n\n\nconst Dashboard = () => {\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [dataList, setDataList] = useState([null]);\n    const [jsonData, setJsonData] = useState(null);\n    const toast = useToast();\n    const createCharts = (chartId, label, attribute) => {\n        const ctx = document.getElementById(chartId).getContext('2d');\n        const values = dataList.map(item => item[attribute]);\n        const labels = dataList.map((item, index) => `Data ${index + 1}`);\n        new Chart(ctx, {\n            type: 'bar',\n            data: {\n                labels: labels,\n                datasets: [{\n                    label: label,\n                    data: values,\n                    backgroundColor: 'rgba(75, 192, 192, 0.2)',\n                    borderColor: 'rgba(75, 192, 192, 1)',\n                    borderWidth: 1\n                }]\n            },\n            options: {\n                scales: {\n                    y: {\n                        beginAtZero: true\n                    }\n                }\n            }\n        });\n    };\n    const handleFileSelect = (event) => {\n        const files = event.target.files;\n        setSelectedFiles([...files]);\n    };\n    useEffect(() => {\n        // Function to make the Axios request\n        const fetchData = async () => {\n            try {\n                const response = await axios.get('http://localhost:8000/api/getdata/');\n                const fetchedDataList = response.data;\n                setDataList(fetchedDataList);\n                console.log(fetchedDataList);\n                createCharts();\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n        fetchData();\n    }, []);\n\n    const handleFileSubmit = async () => {\n        if (selectedFiles.length > 0) {\n            const file = selectedFiles[0];\n            if (file.type === 'application/json') {\n                const reader = new FileReader();\n                reader.onload = async (event) => {\n                    const data = JSON.parse(event.target.result);\n                    setJsonData(data);\n                    try {\n                        const response = await axios.post('http://localhost:8000/api/postdata/', { \"jsondata\": data });\n                        toast({\n                            title: 'Data Successfully Sent',\n                            description: response.data.message,\n                            status: 'success',\n                            duration: 5000,\n                            isClosable: true,\n                        });\n                    } catch (error) {\n                        console.error('Error sending data:', error.response);\n                        toast({\n                            title: 'Error Sending Data',\n                            description: 'An error occurred while sending data.',\n                            status: 'error',\n                            duration: 5000,\n                            isClosable: true,\n                        });\n                    }\n                };\n                reader.readAsText(file);\n            } else {\n                console.log('Selected file is not a JSON file');\n                toast({\n                    title: 'Invalid File Type',\n                    description: 'Please select a valid JSON file.',\n                    status: 'error',\n                    duration: 5000,\n                    isClosable: true,\n                });\n            }\n        } else {\n            console.log('No file selected');\n            toast({\n                title: 'No File Selected',\n                description: 'Please select a file before submitting.',\n                status: 'warning',\n                duration: 5000,\n                isClosable: true,\n            });\n        }\n    };\n\n\n    return (\n        <Flex direction=\"column\" align=\"center\" justify=\"center\" height=\"100vh\">\n            <Text fontSize=\"2xl\" mb={4}>\n                Dashboard\n            </Text>\n            <input\n                type=\"file\"\n                accept=\".json\"\n                onChange={handleFileSelect}\n                style={{ cursor: 'pointer', marginBottom: '1em' }}\n            />\n            <Flex direction=\"column\" mt={4}>\n                {selectedFiles.map((file, index) => (\n                    <Text key={index}>{file.name}</Text>\n                ))}\n            </Flex>\n            <Button colorScheme=\"teal\" mt={4} onClick={handleFileSubmit}>\n                Submit\n            </Button>\n\n            {(dataList) ? (\n                <>\n                    <canvas id=\"intensityChart\" width=\"400\" height=\"200\"></canvas>\n                    <canvas id=\"relevanceChart\" width=\"400\" height=\"200\"></canvas>\n                    <canvas id=\"likelihoodChart\" width=\"400\" height=\"200\"></canvas>\n                </>\n            ) : (\n                <Text>Data Not found</Text>\n            )}\n        </Flex>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}